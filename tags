!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/guibibi/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20220828.0/
$schema	.luarc.json	/^    "$schema": "https:\/\/raw.githubusercontent.com\/sumneko\/vscode-lua\/master\/setting\/schem/;"	s
0	.luarc.json	/^        "vim",$/;"	s	array:Lua.diagnostics.globals
1	.luarc.json	/^        "execute",$/;"	s	array:Lua.diagnostics.globals
2	.luarc.json	/^        "nvim",$/;"	s	array:Lua.diagnostics.globals
3	.luarc.json	/^        "opts",$/;"	s	array:Lua.diagnostics.globals
4	.luarc.json	/^        "options",$/;"	s	array:Lua.diagnostics.globals
5	.luarc.json	/^        "delete_buffer"$/;"	s	array:Lua.diagnostics.globals
Lua.diagnostics.globals	.luarc.json	/^    "Lua.diagnostics.globals": [$/;"	a
["<S-Tab>"]	lua/user/plugins/cmp.lua	/^    ["<S-Tab>"] = cmp.mapping(function(fallback)$/;"	f
["<Tab>"]	lua/user/plugins/cmp.lua	/^    ["<Tab>"] = cmp.mapping(function(fallback)$/;"	f
check_backspace	lua/user/plugins/cmp.lua	/^local check_backspace = function()$/;"	f
delete_buffer	lua/user/functions.lua	/^function delete_buffer()$/;"	f
error_msg	plugin/packer_compiled.lua	/^local no_errors, error_msg = pcall(function()$/;"	f
expand	lua/user/plugins/cmp.lua	/^    expand = function(args)$/;"	f
footer	lua/user/plugins/alpha.lua	/^local function footer()$/;"	f
handlers['textDocument/codeAction']	lua/user/lsps.lua	/^    vim.lsp.handlers['textDocument\/codeAction'] = function(_, _, actions)$/;"	f	unknown:vim.lsp
handlers['textDocument/declaration']	lua/user/lsps.lua	/^    vim.lsp.handlers['textDocument\/declaration'] = function(_, method, result)$/;"	f	unknown:vim.lsp
handlers['textDocument/definition']	lua/user/lsps.lua	/^    vim.lsp.handlers['textDocument\/definition'] = function(_, method, result)$/;"	f	unknown:vim.lsp
handlers['textDocument/documentSymbol']	lua/user/lsps.lua	/^    vim.lsp.handlers['textDocument\/documentSymbol'] = function(_, _, result, _, bufn)$/;"	f	unknown:vim.lsp
handlers['textDocument/implementation']	lua/user/lsps.lua	/^    vim.lsp.handlers['textDocument\/implementation'] = function(_, method, result)$/;"	f	unknown:vim.lsp
handlers['textDocument/references']	lua/user/lsps.lua	/^    vim.lsp.handlers['textDocument\/references'] = function(_, _, result)$/;"	f	unknown:vim.lsp
handlers['textDocument/symbol']	lua/user/lsps.lua	/^    vim.lsp.handlers['textDocument\/symbol'] = function(_, _, result, _, bufn)$/;"	f	unknown:vim.lsp
handlers['textDocument/typeDefinition']	lua/user/lsps.lua	/^    vim.lsp.handlers['textDocument\/typeDefinition'] = function(_, method, result)$/;"	f	unknown:vim.lsp
on_attach	lua/user/setups.lua	/^    on_attach = function(_, bufnr)$/;"	f
open_fn	lua/user/plugins.lua	/^		open_fn = function()$/;"	f
save_profiles	plugin/packer_compiled.lua	/^local function save_profiles(threshold)$/;"	f
time	plugin/packer_compiled.lua	/^  time = function(chunk, start) end$/;"	f
time	plugin/packer_compiled.lua	/^  time = function(chunk, start)$/;"	f
try_loadstring	plugin/packer_compiled.lua	/^local function try_loadstring(s, component, name)$/;"	f
